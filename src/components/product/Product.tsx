import { FC } from "react";
import { Box, Typography, Button, Card, CardMedia, CardContent, Paper } from "@mui/material";
import { useNavigate } from "react-router-dom";
import { Item } from "../../types/types";
import EditIcon from "@mui/icons-material/Edit";

const DEFAULT_IMAGE =
  "https://previews.123rf.com/images/koblizeek/koblizeek2205/koblizeek220500309/186660515-no-image-vector-symbol-missing-available-icon-no-gallery-for-this-moment-placeholder.jpg";

const Product: FC<Item> = (props) => {
  const navigate = useNavigate();
  const { id, name, description, location, type, image, price, cost, 
          propertyType, area, rooms, brand, model, year, mileage, 
          serviceType, experience, workSchedule } = props;

  // –†–µ–Ω–¥–µ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const renderCategoryDetails = () => {
    switch (type) {
      case "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å":
        return (
          <Paper elevation={3} sx={{ p: 2, borderRadius: 2, bgcolor: "#e3f2fd" }}>
            <Typography variant="h6" color="primary">{propertyType}</Typography>
            <Typography variant="body1">üìè –ü–ª–æ—â–∞–¥—å: {area} –º¬≤</Typography>
            <Typography variant="body1">üõè –ö–æ–º–Ω–∞—Ç: {rooms}</Typography>
            <Typography variant="h6" color="success">üí∞ –¶–µ–Ω–∞: {price?.toLocaleString()} ‚ÇΩ</Typography>
          </Paper>
        );
      case "–ê–≤—Ç–æ":
        return (
          <Paper elevation={3} sx={{ p: 2, borderRadius: 2, bgcolor: "#fff3e0" }}>
            <Typography variant="h6" color="primary">{brand} {model}</Typography>
            <Typography variant="body1">üìÖ –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {year}</Typography>
            <Typography variant="body1">üöó –ü—Ä–æ–±–µ–≥: {mileage?.toLocaleString()} –∫–º</Typography>
          </Paper>
        );
      case "–£—Å–ª—É–≥–∏":
        return (
          <Paper elevation={3} sx={{ p: 2, borderRadius: 2, bgcolor: "#e8f5e9" }}>
            <Typography variant="h6" color="primary">{serviceType}</Typography>
            <Typography variant="body1">üë®‚Äçüîß –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: {experience} –ª–µ—Ç</Typography>
            <Typography variant="h6" color="success">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {cost?.toLocaleString()} ‚ÇΩ</Typography>
            <Typography variant="body1">üìÖ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: {workSchedule || "–ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏"}</Typography>
          </Paper>
        );
      default:
        return <Typography variant="body1">‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞</Typography>;
    }
  };

  return (
    <Card sx={{ maxWidth: 1000, mx: "auto", my: 4, p: 3, boxShadow: 5, borderRadius: 3, bgcolor: "#f9f9f9" }}>
      <Box display="flex" flexDirection={{ xs: "column", md: "row" }} gap={3}>
        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–µ–≤–∞ */}
        <CardMedia
          component="img"
          image={image || DEFAULT_IMAGE}
          alt={name}
          sx={{
            width: { xs: "100%", md: 400 },
            height: { xs: 300, md: "100%" },
            borderRadius: 3,
            objectFit: "cover",
            boxShadow: 3
          }}
        />

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Å–ø—Ä–∞–≤–∞ */}
        <CardContent sx={{ flex: 1 }}>
          <Typography variant="h4" fontWeight="bold">{name}</Typography>
          <Typography variant="subtitle1" color="text.secondary">üìç {location}</Typography>

          {/* –î–µ—Ç–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <Box mt={2}>{renderCategoryDetails()}</Box>

          <Typography variant="body1" mt={3} sx={{ bgcolor: "#f1f1f1", p: 2, borderRadius: 2 }}>
            üìù {description}
          </Typography>

          {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <Box mt={3}>
          <Button
  variant="contained"
  color="primary"
  startIcon={<EditIcon />}
  onClick={() => navigate(`/form?id=${id}`)} // 
  sx={{ borderRadius: "25px", px: 3, py: 1 }}
>
  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
</Button>

          </Box>
        </CardContent>
      </Box>
    </Card>
  );
};

export default Product;
